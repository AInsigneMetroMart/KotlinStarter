plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'androidx.navigation.safeargs.kotlin'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jetbrains.dokka'

}
//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "io.ainsigne.kotlinstarter"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 2
        versionName "1.0.1"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    flavorDimensions "default"

    productFlavors {
        metromart {
            applicationIdSuffix = ".metromart"
            dimension "default"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            debuggable false
        }

        stage {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            debuggable true

            matchingFallbacks = ['release']
        }

        debug {
            applicationIdSuffix ".debug"

            signingConfig signingConfigs.debug

            minifyEnabled false

            debuggable true
        }
    }


    dynamicFeatures = [':shop', ':shop', ':browse', ':browse', ':orderagain', ':savings', ':home', ':stores', ':specsheet']
}


dependencies {
    api project(':analytics')
    api project(':utilities')
    api project(':ui')
    api project(':repository')
    api project(':service')

    api otherLibraries.multidex

    implementation otherLibraries.kotlin
    implementation otherLibraries.coroutineCore
    api supportDependencies.codeKtx
    implementation supportDependencies.appCompat
    implementation supportDependencies.design
    implementation supportDependencies.fragment
    implementation supportDependencies.navigationUi
    api supportDependencies.lifecycleViewModelKtx
    api supportDependencies.lifecycleLiveDataKtx
    implementation supportDependencies.commonJava8

    implementation injection.dagger
    kapt injection.daggerKapt

    implementation otherLibraries.timber
    implementation otherLibraries.gson
    implementation otherLibraries.browser
    implementation network.retrofit
    implementation network.retrofitGson
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    // Stetho
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // firebase
    implementation platform(otherLibraries.firebaseBom)
    implementation otherLibraries.firebaseAnalytics
    implementation otherLibraries.firebaseCrashlytics
    implementation otherLibraries.firebaseRemoteConfig
    implementation otherLibraries.firebasePerformance

    implementation ui.constraintLayout
    implementation ui.lottie

    api supportDependencies.extensions

    implementation "androidx.security:security-crypto:1.1.0-alpha01"

    testImplementation testLibraries.junit
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    androidTestImplementation testLibraries.testrule
    androidTestImplementation testLibraries.testrunner
    androidTestImplementation testLibraries.junitext
    androidTestImplementation testLibraries.testcore
    androidTestImplementation testLibraries.espresso
    testImplementation testLibraries.coretest
}

detekt {
    input = files(                                        // The directories where detekt looks for source files. Defaults to `files("src/main/java", "src/main/kotlin")`.
            "src/main/kotlin",
            "src/main/java"
    )
    parallel = false
    // Builds the AST in parallel. Rules are always executed in parallel. Can lead to speedups in larger projects. `false` by default.
    config = files("../quality/detekt_app_config.yml")
    // Define the detekt configuration(s) you want to use. Defaults to the default detekt configuration.
    buildUponDefaultConfig = false
    // Interpret config files as updates to the default config. `false` by default.
//    baseline = file("path/to/baseline.xml")               // Specifying a baseline file. All findings stored in this file in subsequent runs of detekt.
//    disableDefaultRuleSets = false                        // Disables all default detekt rulesets and will only run detekt with custom rules defined in plugins passed in with `detektPlugins` configuration. `false` by default.
    debug = false
    // Adds debug output during task execution. `false` by default.
    ignoreFailures = false
    // If set to `true` the build does not fail when the maxIssues count was reached. Defaults to `false`.
    reports {
        xml {
            enabled = true
            // Enable/Disable XML report (default: true)
            destination = file("build/reports/detekt.xml")
            // Path where XML report will be stored (default: `build/reports/detekt/detekt.xml`)
        }
        html {
            enabled = true
            // Enable/Disable HTML report (default: true)
            destination = file("build/reports/detekt.html")
            // Path where HTML report will be stored (default: `build/reports/detekt/detekt.html`)
        }
    }
}